# The user used by the worker processes.
user www-data;

# The optimal number of worker processes depends on many factors. When one is in 
# doubt, setting it to the number of available CPU cores would be a good start. 
# The value "auto" will try to autodetect it).
worker_processes auto;

# Define the file that will store the process ID of the main process.
pid /var/run/nginx/nginx.pid;

# Determines that nginx should not be executed as a daemon.
daemon off;

# Write the error logs to Docker.
error_log /dev/stderr;

# include configuration for nginx modules
include /etc/nginx/modules-enabled/*.conf;

events {

	# Set the maximum number of simultaneous connections that can be opened by
	# a worker process.
    worker_connections  1024;

	# If multi_accept is disabled, a worker process will accept one new connection 
	# at a time. Otherwise, a worker process will accept all new connections at a time.
    multi_accept on;

}

http {
    
	# Disable access logs.
	access_log off;
	
    # Sets the maximum allowed size of the client request body, specified in the 
	# "Content-Length" request header field. If the size in a request exceeds the 
	# configured value, the 413 (Request Entity Too Large) error is returned to 
	# the client. Setting size to 0 disables checking of client request body size.
    client_max_body_size 100m;

	# Set the default MIME type of a response.
	default_type application/octet-stream;

	# Enable gzipping of responses.
	gzip on;

	# Disables gzipping of responses for requests with "User-Agent" header fields 
	# matching any of the specified regular expressions.
	gzip_disable "msie6";

	# Enable the use of sendfile(), which is used to copy data between one file 
	# descriptor and another. Because this copying is done within the kernel, 
	# sendfile() is more efficient than the combination of read(2) and write(2),
	# which would require transferring data to and from user space.
	sendfile on;

	# Set the bucket size for the server names hash tables.
	server_names_hash_bucket_size 128;

	# Disables emitting nginx version on error pages and in the "Server" response 
	# header field.
	server_tokens off;

	# Enables or disables the use of the TCP_NODELAY option. The option is enabled 
	# when a connection is transitioned into the keep-alive state. Additionally, 
	# it is enabled on SSL connections, for unbuffered proxying, and for WebSocket 
	# proxying.
	tcp_nodelay on;

	# Enables or disables the use of the TCP_NOPUSH socket option on FreeBSD or the
	# TCP_CORK socket option on Linux. The options are enabled only when sendfile is
	# used. Enabling the option allows sending the response header and the beginning
	# of a file in one packet, on Linux and FreeBSD 4, and sending a file in full 
	# packets.
	tcp_nopush on;

	# Set the maximum size of the types hash tables.
	types_hash_max_size 2048;

    include /etc/nginx/mime.types;
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
    
}
